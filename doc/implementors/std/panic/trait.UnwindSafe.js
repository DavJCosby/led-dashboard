(function() {var implementors = {};
implementors["slc"] = [{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"slc/room/struct.Room.html\" title=\"struct slc::room::Room\">Room</a>&lt;'a&gt;","synthetic":true,"types":["slc::room::Room"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"slc/room_data/struct.RoomData.html\" title=\"struct slc::room_data::RoomData\">RoomData</a>","synthetic":true,"types":["slc::room_data::RoomData"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"slc/room_controller/struct.RoomController.html\" title=\"struct slc::room_controller::RoomController\">RoomController</a>","synthetic":true,"types":["slc::room_controller::RoomController"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"slc/devices/struct.RoomControllerInputHandle.html\" title=\"struct slc::devices::RoomControllerInputHandle\">RoomControllerInputHandle</a>","synthetic":true,"types":["slc::devices::RoomControllerInputHandle"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"slc/devices/struct.RoomControllerOutputHandle.html\" title=\"struct slc::devices::RoomControllerOutputHandle\">RoomControllerOutputHandle</a>","synthetic":true,"types":["slc::devices::RoomControllerOutputHandle"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()